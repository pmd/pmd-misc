/*
 * RuleSetChooser.java
 *
 * Created on 20. februar 2003, 21:16
 */

package pmd.config.ui;

import java.beans.PropertyEditorSupport;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JPanel;

/**
 *
 * @author  ole martin mørk
 */
public class RuleSetChooser extends JPanel {
	private final PropertyEditorSupport editor;
	private final JFileChooser chooser = new JFileChooser();
	/** Creates new form RuleSetChooser */
	public RuleSetChooser(PropertyEditorSupport editor) {
		this.editor = editor;
		RuleSetFilter filter = new RuleSetFilter();
		chooser.setFileFilter( filter );
		initComponents();
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        rulesetList = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        remove = new javax.swing.JButton();
        add = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        stdRules = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridBagLayout());

        setPreferredSize(new java.awt.Dimension(355, 200));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 131));
        rulesetList.setModel(new DefaultListModel());
        rulesetList.setMinimumSize(new java.awt.Dimension(200, 200));
        jScrollPane1.setViewportView(rulesetList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 1, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane1, gridBagConstraints);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.BorderLayout(0, 5));

        remove.setText("Remove");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        jPanel2.add(remove, java.awt.BorderLayout.CENTER);

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jPanel2.add(add, java.awt.BorderLayout.NORTH);

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        add(jPanel1, gridBagConstraints);

        jLabel1.setText("Choose the rulesets to use.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLabel1, gridBagConstraints);

        stdRules.setText("Include PMD standard rules.");
        stdRules.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stdRulesActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(stdRules, gridBagConstraints);

    }//GEN-END:initComponents

	private void stdRulesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stdRulesActionPerformed
		editor.firePropertyChange();
	}//GEN-LAST:event_stdRulesActionPerformed

	private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
		int index = rulesetList.getSelectedIndex();
		getListModel().removeElementAt( index );
		editor.firePropertyChange();
	}//GEN-LAST:event_removeActionPerformed

	private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
		int returnValue = chooser.showOpenDialog( this );
		if(returnValue == JFileChooser.APPROVE_OPTION) {
			if( !getListModel().contains( chooser.getSelectedFile().getAbsolutePath() ) ) {
				getListModel().addElement( 
					chooser.getSelectedFile().getAbsolutePath() );
			}
		}
		chooser.cancelSelection();
		editor.firePropertyChange();
	}//GEN-LAST:event_addActionPerformed
	
	public DefaultListModel getListModel() {
		return (DefaultListModel)rulesetList.getModel();
	}
	
	public boolean includeStandardRules() {
		return stdRules.isSelected();
	}
	
	public void setIncludeStandardRules( boolean selected ) {
		stdRules.setSelected( selected );
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList rulesetList;
    private javax.swing.JButton remove;
    private javax.swing.JButton add;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox stdRules;
    // End of variables declaration//GEN-END:variables
	
}
